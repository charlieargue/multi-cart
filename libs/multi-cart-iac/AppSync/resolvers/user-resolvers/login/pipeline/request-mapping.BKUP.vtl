
#set($nowTime = $util.time.nowISO8601() )


{
  "version": "2018-05-29",
  "operation": "GetItem",
  "key": {
    "id": $util.dynamodb.toDynamoDBJson($sessionUserId),
  },
}


{
 "version": "2018-05-29",
 "operation" : "PutItem",
 "key" : {
   "id" : { "S": "$freshUserId"}
 },
 "attributeValues" : {
    "username" :  $util.dynamodb.toDynamoDBJson($ctx.args.options.username),
    "email" :  $util.dynamodb.toDynamoDBJson($ctx.args.options.email),
    "currentCartId" :  $util.dynamodb.toDynamoDBJson(""),
    "createdAt": $util.dynamodb.toDynamoDBJson($nowTime),
    "updatedAt": $util.dynamodb.toDynamoDBJson($nowTime)
 }
}



## -------------------------------------
##   login(password: String!, usernameOrEmail: String!): UserResponse!
## -------------------------------------

## if (!user) {
##     return {
##         errors: [{
##             field: "usernameOrEmail",
##             message: "that usernameOrEmail doesn't exist"
##         }],
##     }
## }

## const valid = await argon2.verify((user as User).password, password);
## if (!valid) {
##     return {
##         errors: [{
##             field: "password",
##             message: "incorrect password"
##         }]
##     }
## }

## // ðŸŸ¢ You are logged in!
## req.session.userId = user.id; // can be object, etc... more data in there, ...
## return {
##     user
## } as const;