#set($freshCartLineId = $util.autoId() )
#set($nowTime = $util.time.nowISO8601() )
$util.qr($ctx.stash.put("freshCartLineId", $freshCartLineId))

## NOTE: cannot do "returnValues": "ALL_NEW|etc..."... it's that way by default!
## NOTE: not doing a pipeline, not fetching cart first, can add that later
## -------------------------------------
## add cart LINE
## -------------------------------------
{
    "version" : "2017-02-28",
    "operation" : "UpdateItem",
    "key" : {
        "id" : { "S": "$ctx.args.cartLine.cartId"}
    },
    "update" : {
        "expression" : "SET #cls = list_append(#cls, :cl)",
        "expressionNames": { 
            "#cls" : "cartLines"
        },
        "expressionValues" : {
          ":cl":  {
                "L": [
                    { "M" : { 
                        "id": { "S":  "$freshCartLineId"},
                        "cartId": { "S":  "$ctx.args.cartLine.cartId"},
                        "itemId": { "S": "$ctx.args.cartLine.itemId"},
                        "description": { "S": "$ctx.args.cartLine.description"},
                        "uom": { "S": "$ctx.args.cartLine.uom"},
                        "categoryId": { "N": 1},
                        "quantity": { "N": "$ctx.args.cartLine.quantity"},
                        "price": { "N": "$ctx.args.cartLine.price"},
                        "cartLineAccounts": $util.dynamodb.toDynamoDBJson([]), 
                        "createdAt": { "S": "$nowTime"},
                        "updatedAt": { "S": "$nowTime"}
                      }},
                    
                ]
              }
        },
    },
}