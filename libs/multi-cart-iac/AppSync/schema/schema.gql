## ------------------------------
#  CARTS
## ------------------------------
type Cart @aws_cognito_user_pools {
  id: ID!
  name: String!
  userId: ID!
  cartLines: [CartLine!]!
  # user: User!
  createdAt: String!
  updatedAt: String!
}

type CartLine @aws_cognito_user_pools {
  id: ID!
  itemId: String
  description: String
  uom: String
  quantity: Int
  categoryId: ID
  price: Float!
  cartId: ID!
  # cart: Cart
  cartLineAccounts: [CartLineAccount!]
  createdAt: String!
  updatedAt: String!
}

type CartLineAccount @aws_cognito_user_pools {
  id: ID!
  amount: Float!
  accountNumber: String!
  cartLineId: ID!
  createdAt: String!
  updatedAt: String!
}

## ------------------------------
#  USER
## ------------------------------
type User @aws_api_key @aws_cognito_user_pools {
  id: ID!
  username: String!
  email: String!
  currentCartId: ID
  createdAt: String!
  updatedAt: String!
}

type UserResponse @aws_api_key @aws_cognito_user_pools {
  errors: [FieldError!]
  user: User
  token: String
}

type FieldError @aws_api_key @aws_cognito_user_pools {
  field: String!
  message: String!
}

## ------------------------------
#  ACCOUNTS
## ------------------------------
type Account @aws_cognito_user_pools {
  id: ID!
  accountNumber: String!
  accountName: String!
  amountRemaining: Float!
  createdAt: String!
  updatedAt: String!
}

## ------------------------------
#  INPUTS / OUTPUTS
## ------------------------------
input UsernamePasswordInput {
  username: String!
  email: String!
  password: String!
}

input CartInput {
  id: ID!
  name: String!
}

input CartLineInput {
  id: ID!
  cartId: ID!
  categoryId: ID!
  quantity: Int!
  price: Float!
  itemId: String!
  description: String!
  uom: String!
}

## ------------------------------
#  QUERIES
## ------------------------------
type Query @aws_cognito_user_pools(cognito_groups: ["User"]) {
  cart(id: ID!): Cart
  carts: [Cart!]!
  users: [User!]!
  accounts: [Account]
  me: User
}

## ------------------------------
#  MUTATIONS
## ------------------------------
type Mutation @aws_api_key @aws_cognito_user_pools {
  # CARTS
  blankCart: Cart! @aws_cognito_user_pools(cognito_groups: ["User"])

  deleteCart(id: ID!): Boolean!
    @aws_cognito_user_pools(cognito_groups: ["User"])

  blankCartLine(cartId: ID!): CartLine!
    @aws_cognito_user_pools(cognito_groups: ["User"])

  deleteCartLine(cartLineId: ID!, cartId: ID!): Boolean!
    @aws_cognito_user_pools(cognito_groups: ["User"])

  updateCart(cart: CartInput!): Cart
    @aws_cognito_user_pools(cognito_groups: ["User"])

  updateCartLine(cartLine: CartLineInput!): CartLine
    @aws_cognito_user_pools(cognito_groups: ["User"])

  addCartLineAccount(
    amount: Float!
    accountNumber: String!
    cartLineId: ID!
    cartId: ID!
  ): CartLineAccount! @aws_cognito_user_pools(cognito_groups: ["User"])

  deleteCartLineAccount(
    cartId: ID!
    cartLineId: ID!
    cartLineAccountId: ID!
  ): Boolean! @aws_cognito_user_pools(cognito_groups: ["User"])

  updateCartLineAccount(
    cartId: ID!
    cartLineId: ID!
    amount: Float!
    id: ID!
  ): CartLineAccount! @aws_cognito_user_pools(cognito_groups: ["User"])

  # ACCOUNTS
  hydrateAccounts: Boolean! @aws_cognito_user_pools(cognito_groups: ["Admin"])

  
  # # USERS üëç PUBLIC ------------------------------
  register(options: UsernamePasswordInput!): UserResponse!
  login(password: String!, usernameOrEmail: String!): UserResponse!
  forgotPassword(email: String!): Boolean!
  changePassword(username: String!, token: String!, newPassword: String!): Boolean

  # # USERS NOT PUBLIC!  ------------------------------
  logout: Boolean! @aws_cognito_user_pools(cognito_groups: ["User"])
  updateUser(currentCartId: ID!): UserResponse!
    @aws_cognito_user_pools(cognito_groups: ["User"])
}
