## ASSUMES: $ctx.prev.result   ==========> USER or null
#set($freshUserId = $util.autoId() )
#set($nowTime = $util.time.nowISO8601() )

## NOTE: this is a manual "UNIQUE CONSTRAINT" since DDB doesn't natively support them, sigh
## if we get back null, we proceed
## otherwise, return an error
#if($util.isNullOrBlank($ctx.prev.result))
    { "version": "2018-05-29", "operation" : "PutItem", "key" : { "id" : { "S": "$freshUserId"} },
    "attributeValues" : { "email" : $util.dynamodb.toDynamoDBJson($ctx.args.options.email), "username" :
    $util.dynamodb.toDynamoDBJson($ctx.args.options.username), "currentCartId" :
    $util.dynamodb.toDynamoDBJson(""), "createdAt": $util.dynamodb.toDynamoDBJson($nowTime),
    "updatedAt": $util.dynamodb.toDynamoDBJson($nowTime) } } 
  #else 
    $utils.error('Unique constraint violation', 'UNIQUE_CONSTRAINT', 'That username or email has already been registered')
    $util.qr($context.stash.put('error', 'That username or email has already been registered'))
#end