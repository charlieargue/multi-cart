## ASSUMES: $ctx.prev.result   ==========> USER or null
#set($freshUserId = $util.autoId() )
#set($nowTime = $util.time.nowISO8601() )

## NOTE: this is a manual "UNIQUE CONSTRAINT" since DDB doesn't natively support them, sigh

## if we get back null, we proceed
## -------------------------------------
#if($util.isNull($ctx.prev.result))

    {
      "version": "2018-05-29",
      "operation" : "PutItem",
      "key" : {
        "id" : { "S": "$freshUserId"}
      },
      "attributeValues" : {
          "email" :  $util.dynamodb.toDynamoDBJson($ctx.args.options.email),
          "username" :  $util.dynamodb.toDynamoDBJson($ctx.args.options.username),
          "currentCartId" :  $util.dynamodb.toDynamoDBJson(""),
          "createdAt": $util.dynamodb.toDynamoDBJson($nowTime),
          "updatedAt": $util.dynamodb.toDynamoDBJson($nowTime)
      }
    }

## otherwise, return an error
## -------------------------------------
#else 
    $utils.error("Unique constraint violation", "UNIQUE_CONSTRAINT", {}, {
      "message": "That username or email has already been registered"
    })
#end