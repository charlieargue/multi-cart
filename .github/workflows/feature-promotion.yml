# ###################################################################################################
# Feature -> develop, AND ON SUCCESS, üî• develop -> main (including testing pyramid)
# ###################################################################################################
# thx: https://docs.github.com/en/actions/guides/building-and-testing-nodejs
# thx: https://jestjs.io/docs/cli
# thx: https://www.karltarvas.com/2020/12/09/github-actions-cache-yarn-install.html
# thx: https://stackoverflow.com/questions/67136614/cache-node-modules-in-github-actions
# thx: https://github.com/cypress-io/cypress-realworld-app/blob/develop/.github/workflows/main.yml
# thx: https://github.com/marketplace/actions/cypress-io
# ###################################################################################################

name: cicd-pipeline
on:
  push:
    branches:
      - 'kg-**'
jobs:
  # ###################################################################################################
  # Install Deps
  # ###################################################################################################
  install-everything-and-save:
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.15.0-chrome86-ff82
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      # NODE VERSION
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # CHECKOUT feature branch
      - name: Checkout Feature Branch
        uses: actions/checkout@v2

      # TRY AGAIN: cache for each container
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # TRY AGAIN: cache for each container
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # INSTALL dependencies
      - name: Install dependencies
        uses: cypress-io/github-action@v2
        with:
          runTests: false
      - run: yarn cypress info # report machine parameters
      - run: yarn install --prefer-offline --frozen-lockfile

      # BUILD STORYBOOK build
      - name: Build react-ui Storybook üî• (quietly)
        run: yarn nx run react-ui:build-storybook:ci

      # SAVE dist folder as ARTIFACT
      - name: Save dist olders
        uses: actions/upload-artifact@v2
        with:
          name: my-artifacts
          if-no-files-found: error
          path: dist


  # ###################################################################################################
  # Feature JEST UNIT TESTING
  # ###################################################################################################
  featureJestUnitTesting:
    needs: [install-everything-and-save]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      # NODE VERSION
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # CHECKOUT feature branch
      - name: Checkout Feature Branch
        uses: actions/checkout@v2

      # TRY AGAIN: cache for each container
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # TRY AGAIN: cache for each container
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # --------------------------------------
      # If there are any changes to FE code (we ignore unit testing if BE-only code changes)
      # ‚Ä¢ run FE unit tests (util jest tests + react library storybooks via cypress)
      # ‚Ä¢ ABORT JOB if fail on either
      # --------------------------------------

      # RUN UNIT TESTS (jest), üî¥ ABORT ON FAIL
      - name: Jest unit tests üî•
        run: yarn nx run util:test

  # ###################################################################################################
  # cypress test storybook
  # # ###################################################################################################
  ui-chrome-tests-react-ui:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.15.0-chrome86-ff82
    needs: [install-everything-and-save]
    strategy:
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
        node-version: [14.x]
    steps:
      # NODE VERSION
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # CHECKOUT feature branch
      - name: Checkout Feature Branch
        uses: actions/checkout@v2

      # TRY AGAIN: cache for each container
      # See: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # TRY AGAIN: cache for each container
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # https://github.com/cypress-io/cypress/issues/9056
      - name: Add emoji font üõç
        run: apt-get install fonts-noto-color-emoji -y

      # DOWNLOAD ARTIFACTS (dist folder, storybok build)
      - name: Download the dist folder
        uses: actions/download-artifact@v2
        with:
          name: my-artifacts
          path: dist

      # üî¥ TEMP DEBUGGING: INSTALL dependencies
      # üî¥ NOTE: in all this, stuck on how to spread cache into each container from initial dep install, TBD
      - name: Install dependencies
        uses: cypress-io/github-action@v2
        with:
          runTests: false
      - run: yarn cypress info # report machine parameters
      - run: yarn install --prefer-offline --frozen-lockfile

      # --------------------------------------
      # run FE Storybook build + Cypress react-ui SPECS!
      # --------------------------------------
      # launch storybook
      - name: Start-up Storybook
        run: npx http-server dist/storybook/react-ui -p 4400 &

      - name: 'UI Tests - react-ui - Chrome'
        uses: cypress-io/github-action@v2
        with:
          start: yarn nx run react-ui-e2e:e2e:ci
          wait-on: 'http://localhost:4400'
          wait-on-timeout: 600
          browser: chrome
          record: true
          parallel: true
          group: 'UI - Chrome'
          install: false
          spec: src/integration/**/*
          config-file: cypress.json
          working-directory: apps/react-ui-e2e/

        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID_REACT_UI }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY_REACT_UI }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: ${{ secrets.CYPRESS_DEBUG }}
