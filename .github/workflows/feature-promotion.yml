# ###################################################################################################
# Feature -> develop, AND ON SUCCESS, ðŸ”¥ develop -> main (including testing pyramid)
# ###################################################################################################
# thx: https://docs.github.com/en/actions/guides/building-and-testing-nodejs
# thx: https://jestjs.io/docs/cli
# thx: https://www.karltarvas.com/2020/12/09/github-actions-cache-yarn-install.html
# thx: https://stackoverflow.com/questions/67136614/cache-node-modules-in-github-actions
# thx: https://github.com/cypress-io/cypress-realworld-app/blob/develop/.github/workflows/main.yml
# thx: https://github.com/marketplace/actions/cypress-io
# ###################################################################################################

name: cicd-pipeline
on:
  push:
    branches:
      - 'kg-**'
jobs:
  # ###################################################################################################
  # Install Deps
  # ###################################################################################################
  install-everything-and-save:
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.15.0-chrome86-ff82
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      # NODE VERSION
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # CHECKOUT feature branch
      - name: Checkout Feature Branch
        uses: actions/checkout@v2

      # cache for each container
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # cache for each container
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # INSTALL dependencies
      - name: Install dependencies
        uses: cypress-io/github-action@v2
        with:
          runTests: false
      - run: yarn cypress info # report machine parameters
      - run: yarn install --prefer-offline --frozen-lockfile

      # BUILD STORYBOOKs
      - name: Build Storybooks ðŸ”¥ (quietly)
        run: |
          yarn nx run react-ui:build-storybook:ci &
          yarn nx run react-shared-components:build-storybook:ci

      # SAVE dist folder as ARTIFACT
      - name: Save dist olders
        uses: actions/upload-artifact@v2
        with:
          name: my-artifacts
          if-no-files-found: error
          path: dist

  # ###################################################################################################
  # DEV POSTMAN API/BE TESTING
  # ###################################################################################################
  devPostmanTestingAPI:
    needs: [install-everything-and-save]
    # needs: [featurePromotion]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      # NODE VERSION
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # CHECKOUT feature branch
      - name: Checkout Feature Branch
        uses: actions/checkout@v2

      # cache for each container
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # cache for each container
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # --------------------------------------
      # TODO: ONLY if code changes to BE/IAC/API code (TODO: when split out into other workflow action files)
      # --------------------------------------

      # INSTALL dependencies
      - name: Install dependencies
        run: yarn install --prefer-offline --frozen-lockfile

      # DECOMISH:           # echo API_KEY=${{ secrets.POSTMAN_SECRETS }} >> libs/multi-cart-iac-tests/src/env-variables/Multi-Cart.postman_environment.json
      - name: Create POSTMAN env file
        run: |
          echo "${{ secrets.POSTMAN_SECRETS }}" > libs/multi-cart-iac-tests/src/env-variables/Multi-Cart.postman_environment.json
          cat libs/multi-cart-iac-tests/src/env-variables/Multi-Cart.postman_environment.json

      # RUN POSTMAN TESTS (against DEV backend)
      - name: Jest ðŸŽ¾ POSTMAN tests ðŸŽ¾
        run: yarn test-iac
