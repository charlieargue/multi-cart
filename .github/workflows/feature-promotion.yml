# ###################################################################################################
# Feature -> develop, AND ON SUCCESS, ðŸ”¥ develop -> main (including testing pyramid)
# ###################################################################################################
# thx: https://docs.github.com/en/actions/guides/building-and-testing-nodejs
# thx: https://jestjs.io/docs/cli
# thx: https://www.karltarvas.com/2020/12/09/github-actions-cache-yarn-install.html
# thx: https://stackoverflow.com/questions/67136614/cache-node-modules-in-github-actions

name: cicd-pipeline
on:
  push:
    branches:
      - 'kg-**'
jobs:
  # ###################################################################################################
  # Feature BUILDING
  # ###################################################################################################
  featureBuilding:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      # NODE VERSION
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # CACHE npm/node modules for faster yarn installs
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # CHECKOUT feature branch
      - name: Checkout Feature Branch
        uses: actions/checkout@v2

      # See: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # TROUBLE saving/using cache key...
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # `--prefer-offline` gives cache priority
      - name: Install dependencies
        run: yarn install --prefer-offline --frozen-lockfile

  # ###################################################################################################
  # Feature TESTING
  # ###################################################################################################
  featureTesting:
    needs: featureBuilding
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      # NODE VERSION
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # CACHE npm/node modules for faster yarn installs
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # CHECKOUT feature branch
      - name: Checkout Feature Branch
        uses: actions/checkout@v2

      # See: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # TROUBLE saving/using cache key...
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      # --------------------------------------
      # If there are any changes to FE code (we ignore unit testing if BE-only code changes)
      # â€¢ run FE unit tests (util jest tests + react library storybooks via cypress)
      # â€¢ ABORT JOB if fail on either
      # --------------------------------------

      # RUN UNIT TESTS (jest), ðŸ”´ ABORT ON FAIL
      - name: Jest unit tests ðŸ”¥
        run: yarn nx run util:test

      # RUN CYPRESS STORYBOOK TESTS (react-ui & react-shared-components), ðŸ”´ ABORT ON FAIL
      - name: Cypress/Storybook UI unit tests - react-shared-components ðŸ”¥
        run: yarn nx run react-shared-components-e2e:e2e

      - name: Cypress/Storybook UI unit tests - react-ui ðŸ”¥
        run: yarn nx run react-ui-e2e:e2e

  # ###################################################################################################
  # Feature PROMOTION (to DEV)
  # ###################################################################################################
  featurePromotion:
    needs: [featureTesting, featureBuilding]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      # NODE VERSION
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # CHECKOUT feature branch
      - name: Checkout Feature Branch
        uses: actions/checkout@v2

      # SAVE current branch name to variable [[short_ref]]
      - name: Set output
        id: vars
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      # PRINT/DISPLAY [[short_ref]] for debugging/trouble-shooting ease
      - name: Check output
        run: echo ${{ steps.vars.outputs.short_ref }} âœŠ

      # --------------------------------------
      # âœ… Upon success...
      # --------------------------------------

      # CREATE/MERGE Pull Request (w/ dev)
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          base: ${{ steps.vars.outputs.short_ref }}
          branch: develop

  # ###################################################################################################
  # develop -> PRODUCTION
  # ###################################################################################################
  developPromotion:
    needs: [featureTesting, featureBuilding, featurePromotion]
    runs-on: ubuntu-latest
    steps:
      # thx: https://github.com/actions/checkout
      - uses: actions/checkout@v2
        with:
          ref: 'develop'

      - name: Create PROD Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          # CONFUSING: backwards from githubs "comparing changes" syntax, sigh
          base: develop
          branch: main
