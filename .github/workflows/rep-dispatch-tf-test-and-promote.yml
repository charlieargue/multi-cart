# thx: https://dev.to/rikurouvila/how-to-trigger-a-github-action-with-an-htt-request-545

name: tf-test-and-promote

on:
  repository_dispatch:
    types: tf-test-dev-and-promote-to-prod

jobs:
  # ###################################################################################################
  # DEV POSTMAN API/BE TESTING
  # ###################################################################################################
  devPostmanTestingAPI:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      # NODE VERSION
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # CHECKOUT feature branch
      - name: Checkout Feature Branch
        uses: actions/checkout@v2

      # cache for each container
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # cache for each container
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # --------------------------------------
      # TODO: ONLY if code changes to BE/IAC/API code (TODO: when split out into other workflow action files)
      # --------------------------------------

      # INSTALL dependencies
      - name: Install dependencies
        run: yarn install --prefer-offline --frozen-lockfile

      # ðŸ›¡ use GITHUB SECRET to create POSTMAN environment file (SECURITY FYI: without sending sensitive keys to LOG, aka the *** replacements)
      - name: Create POSTMAN env file
        run: 'echo "$POSTMAN_ENV" > libs/multi-cart-iac-tests/src/env-variables/Multi-Cart.postman_environment.json'
        shell: bash
        env:
          POSTMAN_ENV: ${{secrets.POSTMAN_SECRETS}}

      # RUN POSTMAN TESTS (against DEV backend)
      - name: ðŸŽ¾ POSTMAN tests ðŸŽ¾ (via newman)
        run: yarn test-iac

  # ###################################################################################################
  # develop -> PRODUCTION
  # ###################################################################################################
  developPromotion:
    needs: [devPostmanTestingAPI]
    runs-on: ubuntu-latest
    steps:
      # thx: https://github.com/actions/checkout
      - uses: actions/checkout@v2
        with:
          ref: 'develop'

      - name: Create PROD Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          # CONFUSING: backwards from githubs "comparing changes" syntax, sigh
          base: develop
          branch: main
